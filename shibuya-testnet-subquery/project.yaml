specVersion: 1.0.0
name: shibuya-testnet-subquery
version: 1.0.0
runner:
  node:
    name: '@subql/node'
    version: '*'
  query:
    name: '@subql/query'
    version: '*'
description: >-
  A basic Frontier EVM example project with an event and call handler. Read more
  about this at https://university.subquery.network/create/frontier/. This
  project can be use as a starting point for developing your SubQuery project
repository: 'https://github.com/EthicalEatingAndEarn/subquery-sample'
schema:
  file: ./schema.graphql
network:
  # chainId: '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'
  chainId: '0xddb89973361a170839f80f152d2e9e38a376a5a7eccefcade763f46a8e567019'
  endpoint: 'wss://rpc.shibuya.astar.network'
  dictionary: 'https://api.subquery.network/sq/subquery/astar-dictionary'
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/FrontierEvm
    startBlock: 1
    processor:
      file: ./node_modules/@subql/frontier-evm-processor/dist/index.js
      options:
        abi: erc20
    # assets:
    #   erc20:
    #     file: ./erc20.abi.json
    assets:
      erc721:
        file: ./abis/CryplantNFT.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleFrontierEvmEvent
          kind: substrate/FrontierEvmEvent
          filter:
            topics:
              - 'Transfer(address indexed from,address indexed to,uint256 value)'
              - null
              - null
              - null
        - handler: handleFrontierEvmCall
          kind: substrate/FrontierEvmCall
          filter:
            function: 'approve(address to,uint256 value)'
            from: '0x6bd193ee6d2104f14f94e2ca6efefae561a4334b'
